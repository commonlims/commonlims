// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ResolveActions with confirmation step renders 1`] = `
<ResolveActions
  confirmLabel="Resolve"
  confirmMessage="Are you sure???"
  hasRelease={false}
  isAutoResolved={false}
  isResolved={false}
  onUpdate={[Function]}
  orgId="org-1"
  projectId="proj-1"
  shouldConfirm={true}
>
  <div
    style={
      Object {
        "display": "inline-block",
      }
    }
  >
    <AssignProcessVarsModal
      onCanceled={[Function]}
      onSelected={[Function]}
      orgId="org-1"
      projectId="proj-1"
      show={false}
    >
      <Modal
        animation={false}
        autoFocus={true}
        backdrop={true}
        bsClass="modal"
        dialogComponentClass={[Function]}
        enforceFocus={true}
        keyboard={true}
        manager={
          ModalManager {
            "add": [Function],
            "containers": Array [],
            "data": Array [],
            "handleContainerOverflow": true,
            "hideSiblingNodes": true,
            "isTopModal": [Function],
            "modals": Array [],
            "remove": [Function],
          }
        }
        onHide={[Function]}
        renderBackdrop={[Function]}
        restoreFocus={true}
        show={false}
      >
        <Modal
          autoFocus={true}
          backdrop={true}
          backdropClassName="modal-backdrop"
          containerClassName="modal-open"
          enforceFocus={true}
          keyboard={true}
          manager={
            ModalManager {
              "add": [Function],
              "containers": Array [],
              "data": Array [],
              "handleContainerOverflow": true,
              "hideSiblingNodes": true,
              "isTopModal": [Function],
              "modals": Array [],
              "remove": [Function],
            }
          }
          onEntering={[Function]}
          onExited={[Function]}
          onHide={[Function]}
          renderBackdrop={[Function]}
          restoreFocus={true}
          show={false}
        />
      </Modal>
    </AssignProcessVarsModal>
    <div
      className="btn-group"
    >
      <ActionLink
        className="btn btn-default btn-sm"
        confirmLabel="Resolve"
        disabled={false}
        message="Are you sure???"
        onAction={[Function]}
        shouldConfirm={true}
        title="Resolve"
      >
        <Confirm
          cancelText="Cancel"
          confirmText="Resolve"
          disableConfirmButton={false}
          message="Are you sure???"
          onConfirm={[Function]}
          priority="primary"
        >
          <a
            className="btn btn-default btn-sm"
            onClick={[Function]}
            title="Resolve"
          >
             
            <span
              className="icon-checkmark hidden-xs"
              style={
                Object {
                  "marginRight": 5,
                }
              }
            />
            <GuideAnchor
              target="resolve"
              type="text"
            >
              <GuideAnchorContainer
                innerRef={[Function]}
                type="text"
              >
                <div
                  className="css-9u5for-GuideAnchorContainer e130o4350"
                  type="text"
                >
                  <StyledGuideAnchor
                    active={false}
                    className="guide-anchor-ping resolve"
                  >
                    <div
                      className="guide-anchor-ping resolve css-1yndvnf-StyledGuideAnchor e130o4351"
                    >
                      <StyledGuideAnchorRipples>
                        <div
                          className="css-3zj3g7-StyledGuideAnchorRipples e130o4352"
                        />
                      </StyledGuideAnchorRipples>
                    </div>
                  </StyledGuideAnchor>
                </div>
              </GuideAnchorContainer>
            </GuideAnchor>
            Resolve
          </a>
          <Modal
            animation={false}
            autoFocus={true}
            backdrop={true}
            bsClass="modal"
            dialogComponentClass={[Function]}
            enforceFocus={true}
            keyboard={true}
            manager={
              ModalManager {
                "add": [Function],
                "containers": Array [],
                "data": Array [],
                "handleContainerOverflow": true,
                "hideSiblingNodes": true,
                "isTopModal": [Function],
                "modals": Array [],
                "remove": [Function],
              }
            }
            onHide={[Function]}
            renderBackdrop={[Function]}
            restoreFocus={true}
            show={false}
          >
            <Modal
              autoFocus={true}
              backdrop={true}
              backdropClassName="modal-backdrop"
              containerClassName="modal-open"
              enforceFocus={true}
              keyboard={true}
              manager={
                ModalManager {
                  "add": [Function],
                  "containers": Array [],
                  "data": Array [],
                  "handleContainerOverflow": true,
                  "hideSiblingNodes": true,
                  "isTopModal": [Function],
                  "modals": Array [],
                  "remove": [Function],
                }
              }
              onEntering={[Function]}
              onExited={[Function]}
              onHide={[Function]}
              renderBackdrop={[Function]}
              restoreFocus={true}
              show={false}
            />
          </Modal>
        </Confirm>
      </ActionLink>
    </div>
  </div>
</ResolveActions>
`;

exports[`ResolveActions without confirmation renders 1`] = `
<ResolveActions
  confirmLabel="Resolve"
  hasRelease={false}
  isAutoResolved={false}
  isResolved={false}
  onUpdate={[Function]}
  orgId="org-1"
  projectId="proj-1"
>
  <div
    style={
      Object {
        "display": "inline-block",
      }
    }
  >
    <AssignProcessVarsModal
      onCanceled={[Function]}
      onSelected={[Function]}
      orgId="org-1"
      projectId="proj-1"
      show={false}
    >
      <Modal
        animation={false}
        autoFocus={true}
        backdrop={true}
        bsClass="modal"
        dialogComponentClass={[Function]}
        enforceFocus={true}
        keyboard={true}
        manager={
          ModalManager {
            "add": [Function],
            "containers": Array [],
            "data": Array [],
            "handleContainerOverflow": true,
            "hideSiblingNodes": true,
            "isTopModal": [Function],
            "modals": Array [],
            "remove": [Function],
          }
        }
        onHide={[Function]}
        renderBackdrop={[Function]}
        restoreFocus={true}
        show={false}
      >
        <Modal
          autoFocus={true}
          backdrop={true}
          backdropClassName="modal-backdrop"
          containerClassName="modal-open"
          enforceFocus={true}
          keyboard={true}
          manager={
            ModalManager {
              "add": [Function],
              "containers": Array [],
              "data": Array [],
              "handleContainerOverflow": true,
              "hideSiblingNodes": true,
              "isTopModal": [Function],
              "modals": Array [],
              "remove": [Function],
            }
          }
          onEntering={[Function]}
          onExited={[Function]}
          onHide={[Function]}
          renderBackdrop={[Function]}
          restoreFocus={true}
          show={false}
        />
      </Modal>
    </AssignProcessVarsModal>
    <div
      className="btn-group"
    >
      <ActionLink
        className="btn btn-default btn-sm"
        confirmLabel="Resolve"
        disabled={false}
        onAction={[Function]}
        shouldConfirm={false}
        title="Resolve"
      >
        <a
          className="btn btn-default btn-sm"
          disabled={false}
          onClick={[Function]}
        >
          <span
            className="icon-checkmark hidden-xs"
            style={
              Object {
                "marginRight": 5,
              }
            }
          />
          <GuideAnchor
            target="resolve"
            type="text"
          >
            <GuideAnchorContainer
              innerRef={[Function]}
              type="text"
            >
              <div
                className="css-9u5for-GuideAnchorContainer e130o4350"
                type="text"
              >
                <StyledGuideAnchor
                  active={false}
                  className="guide-anchor-ping resolve"
                >
                  <div
                    className="guide-anchor-ping resolve css-1yndvnf-StyledGuideAnchor e130o4351"
                  >
                    <StyledGuideAnchorRipples>
                      <div
                        className="css-3zj3g7-StyledGuideAnchorRipples e130o4352"
                      />
                    </StyledGuideAnchorRipples>
                  </div>
                </StyledGuideAnchor>
              </div>
            </GuideAnchorContainer>
          </GuideAnchor>
          Resolve
        </a>
      </ActionLink>
    </div>
  </div>
</ResolveActions>
`;
