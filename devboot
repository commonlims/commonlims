# This file must be sourced
#
# For convenience, it installs both pyenv and nvm and is provided for a consistent build
# across all dev and build machines.
#
# It's not required to run this script if you want to specify node and python
# versions in another way.
if [ ! -d ~/.pyenv ]; then
    echo "Installing pyenv..."
    git clone https://github.com/pyenv/pyenv.git ~/.pyenv

    echo "pyenv has been setup"
else
    echo "pyenv is already installed"
fi

export PYENV_ROOT="$HOME/.pyenv"
export PATH="$PYENV_ROOT/bin:$PATH"
echo "Manually add to .bash_profile or similar (optional):"
echo "### pyenv settings"
echo 'export PYENV_ROOT="$HOME/.pyenv"'
echo 'export PATH="$PYENV_ROOT/bin:$PATH"'
echo "###"

if [ ! -d $(pyenv root)/plugins/pyenv-virtualenv ]; then
    echo "installing pyenv-virtualenv"
    git clone https://github.com/pyenv/pyenv-virtualenv.git $(pyenv root)/plugins/pyenv-virtualenv
else
    echo "pyenv-virtualenv already exists"
fi

CLIMS_PY2_VERSION=2.7.18
CLIMS_PY3_VERSION=3.8.5

for version in $CLIMS_PY2_VERSION $CLIMS_PY3_VERSION; do
  major=${version%.*.*};
  echo $version
  if [ ! -d ~/.pyenv/versions/${version} ]; then
      echo "Installing Python ${version}..."
      pyenv install ${version}
  fi

  name=clims${major}
  if [ ! -d ~/.pyenv/versions/${name} ]; then
      echo "Creating ${name} virtualenv ..."
      pyenv virtualenv ${version} ${name}
  fi
done


pyenv activate clims2

./scripts/build-python-reqs

export CLIMS_PYTHON_PATH=$(which python)  # For use in e.g. vscode

source ./devboot-js
