# -*- coding: utf-8 -*-
# Generated by Django 1.9.13 on 2019-10-13 18:06
from __future__ import unicode_literals

import clims.models.file
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import sentry.db.models.fields.bounded
import sentry.db.models.fields.foreignkey


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('sentry', '0005_auto_20190911_0655'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CamundaProcess',
            fields=[
                ('id', models.TextField(db_column=b'id_', primary_key=True, serialize=False)),
                ('rev', models.IntegerField(db_column=b'rev_')),
                ('category', models.TextField(db_column=b'category_')),
                ('name', models.TextField(db_column=b'name_')),
                ('key', models.TextField(db_column=b'key_')),
                ('version', models.IntegerField(db_column=b'version_')),
                ('deployment', models.TextField(db_column=b'deployment_id_')),
                ('resource_name', models.TextField(db_column=b'resource_name_')),
                ('dgrm_resource_name', models.TextField(db_column=b'dgrm_resource_name_')),
                ('has_start_form_key', models.BooleanField(db_column=b'has_start_form_key_', default=None)),
                ('suspension_state', models.IntegerField(db_column=b'suspension_state_')),
                ('tenant', models.TextField(db_column=b'tenant_id_')),
                ('version_tag', models.TextField(db_column=b'version_tag_')),
                ('history_ttl', models.IntegerField(db_column=b'history_ttl_')),
                ('startable', models.BooleanField(db_column=b'startable_', default=None)),
            ],
            options={
                'db_table': 'act_re_procdef',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CamundaTask',
            fields=[
                ('id', models.TextField(db_column=b'id_', primary_key=True, serialize=False)),
                ('rev', models.IntegerField(db_column=b'rev_')),
                ('execution', models.TextField(db_column=b'execution_id_')),
                ('process_instance', models.TextField(db_column=b'proc_inst_id_')),
                ('case_execution', models.TextField(db_column=b'case_execution_id_')),
                ('case_instance', models.TextField(db_column=b'case_inst_id_')),
                ('case_definition', models.TextField(db_column=b'case_def_id_')),
                ('name', models.TextField(db_column=b'name_')),
                ('parent_task', models.TextField(db_column=b'parent_task_id')),
                ('description', models.TextField(db_column=b'description_')),
                ('task_definition_key', models.TextField(db_column=b'task_def_key_')),
                ('owner', models.TextField(db_column=b'owner_')),
                ('delegation', models.TextField(db_column=b'delegation_')),
                ('priority', models.IntegerField(db_column=b'priority_')),
                ('created', models.DateTimeField(db_column=b'create_time_')),
                ('assignee', models.TextField(db_column=b'assignee_')),
                ('due_date', models.DateTimeField(db_column=b'due_date_')),
                ('follow_up_date', models.DateTimeField(db_column=b'follow_up_date_')),
                ('suspension_state', models.IntegerField(db_column=b'suspension_state_')),
                ('tenant_id', models.TextField(db_column=b'tenant_id_')),
            ],
            options={
                'db_table': 'act_ru_task',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Container',
            fields=[
                ('id', sentry.db.models.fields.bounded.BoundedBigAutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.TextField(null=True)),
            ],
            options={
                'db_table': 'clims_container',
            },
        ),
        migrations.CreateModel(
            name='ContainerType',
            fields=[
                ('id', sentry.db.models.fields.bounded.BoundedBigAutoField(primary_key=True, serialize=False)),
                ('name', models.TextField(null=True)),
                ('rows', models.IntegerField(verbose_name=b'rows')),
                ('cols', models.IntegerField(verbose_name=b'cols')),
                ('levels', models.IntegerField(default=1, verbose_name=b'levels')),
            ],
            options={
                'db_table': 'clims_container_type',
            },
        ),
        migrations.CreateModel(
            name='ContainerVersion',
            fields=[
                ('id', sentry.db.models.fields.bounded.BoundedBigAutoField(primary_key=True, serialize=False)),
                ('previous_name', models.TextField(null=True)),
                ('version', models.IntegerField(default=1)),
                ('latest', models.BooleanField(default=True)),
                ('archetype', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='versions', to='clims.Container')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ExtensibleProperty',
            fields=[
                ('id', sentry.db.models.fields.bounded.BoundedBigAutoField(primary_key=True, serialize=False)),
                ('float_value', models.FloatField(null=True)),
                ('int_value', models.IntegerField(null=True)),
                ('string_value', models.TextField(null=True)),
                ('bool_value', models.NullBooleanField()),
            ],
            options={
                'db_table': 'clims_extensibleproperty',
            },
        ),
        migrations.CreateModel(
            name='ExtensiblePropertyType',
            fields=[
                ('id', sentry.db.models.fields.bounded.BoundedBigAutoField(primary_key=True, serialize=False)),
                ('name', models.TextField()),
                ('display_name', models.TextField(null=True)),
                ('raw_type', models.TextField(choices=[(b's', b'string'), (b'j', b'json'), (b'i', b'int'), (b'f', b'float'), (b'b', b'bool')])),
            ],
            options={
                'db_table': 'clims_extensiblepropertytype',
            },
        ),
        migrations.CreateModel(
            name='ExtensibleType',
            fields=[
                ('id', sentry.db.models.fields.bounded.BoundedBigAutoField(primary_key=True, serialize=False)),
                ('name', models.TextField()),
                ('category', models.TextField()),
            ],
            options={
                'db_table': 'clims_extensibletype',
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', sentry.db.models.fields.bounded.BoundedBigAutoField(primary_key=True, serialize=False)),
                ('x', models.IntegerField(default=0)),
                ('y', models.IntegerField(default=0)),
                ('z', models.IntegerField(default=0)),
                ('container', sentry.db.models.fields.foreignkey.FlexibleForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clims.Container')),
            ],
            options={
                'db_table': 'clims_location',
            },
        ),
        migrations.CreateModel(
            name='OrganizationFile',
            fields=[
                ('id', sentry.db.models.fields.bounded.BoundedBigAutoField(primary_key=True, serialize=False)),
                ('name', models.TextField()),
                ('file', sentry.db.models.fields.foreignkey.FlexibleForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sentry.File')),
                ('organization', sentry.db.models.fields.foreignkey.FlexibleForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sentry.Organization')),
            ],
            options={
                'db_table': 'clims_organizationfile',
            },
        ),
        migrations.CreateModel(
            name='PluginRegistration',
            fields=[
                ('id', sentry.db.models.fields.bounded.BoundedBigAutoField(primary_key=True, serialize=False)),
                ('name', models.TextField()),
                ('version', models.TextField()),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sentry.Organization')),
            ],
            options={
                'db_table': 'clims_pluginregistration',
            },
        ),
        migrations.CreateModel(
            name='Substance',
            fields=[
                ('id', sentry.db.models.fields.bounded.BoundedBigAutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.TextField()),
                ('depth', models.IntegerField(default=1)),
                ('extensible_type', sentry.db.models.fields.foreignkey.FlexibleForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clims.ExtensibleType')),
                ('location', sentry.db.models.fields.foreignkey.FlexibleForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='clims.Location')),
                ('organization', sentry.db.models.fields.foreignkey.FlexibleForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sentry.Organization')),
                ('origins', models.ManyToManyField(to='clims.Substance')),
            ],
            options={
                'db_table': 'clims_substance',
            },
        ),
        migrations.CreateModel(
            name='SubstanceVersion',
            fields=[
                ('id', sentry.db.models.fields.bounded.BoundedBigAutoField(primary_key=True, serialize=False)),
                ('previous_name', models.TextField(null=True)),
                ('version', models.IntegerField(default=1)),
                ('latest', models.BooleanField(default=True)),
                ('archetype', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='versions', to='clims.Substance')),
                ('properties', models.ManyToManyField(to='clims.ExtensibleProperty')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Transition',
            fields=[
                ('id', sentry.db.models.fields.bounded.BoundedBigAutoField(primary_key=True, serialize=False)),
                ('performed', models.BooleanField(default=False)),
                ('created', models.DateTimeField(db_index=True, default=django.utils.timezone.now, verbose_name=b'created')),
                ('source_location', sentry.db.models.fields.foreignkey.FlexibleForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='source_transitions', to='clims.Location')),
                ('target_location', sentry.db.models.fields.foreignkey.FlexibleForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='target_transitions', to='clims.Location')),
            ],
            options={
                'db_table': 'clims_transition',
            },
        ),
        migrations.CreateModel(
            name='WorkBatch',
            fields=[
                ('id', sentry.db.models.fields.bounded.BoundedBigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=200, verbose_name=b'name')),
                ('handler', models.TextField(verbose_name=b'handler')),
                ('created', models.DateTimeField(db_index=True, default=django.utils.timezone.now, verbose_name=b'created')),
                ('extra_fields', models.TextField(verbose_name=b'extra_fields')),
                ('num_comments', sentry.db.models.fields.bounded.BoundedPositiveIntegerField(default=0, null=True)),
                ('status', sentry.db.models.fields.bounded.BoundedPositiveIntegerField(choices=[(0, 'Unresolved'), (1, 'Resolved'), (2, 'Ignored')], db_index=True, default=0)),
                ('organization', sentry.db.models.fields.foreignkey.FlexibleForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sentry.Organization')),
                ('plugin', sentry.db.models.fields.foreignkey.FlexibleForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clims.PluginRegistration')),
            ],
            options={
                'db_table': 'clims_workbatch',
            },
        ),
        migrations.CreateModel(
            name='WorkBatchAssignee',
            fields=[
                ('id', sentry.db.models.fields.bounded.BoundedBigAutoField(primary_key=True, serialize=False)),
                ('date_added', models.DateTimeField(default=django.utils.timezone.now)),
                ('organization', sentry.db.models.fields.foreignkey.FlexibleForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assignee_set', to='sentry.Organization')),
                ('team', sentry.db.models.fields.foreignkey.FlexibleForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sentry_assignee_set', to='sentry.Team')),
                ('user', sentry.db.models.fields.foreignkey.FlexibleForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sentry_assignee_set', to=settings.AUTH_USER_MODEL)),
                ('work_batch', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='assignee_set', to='clims.WorkBatch')),
            ],
            options={
                'db_table': 'clims_workbatchassignee',
            },
        ),
        migrations.CreateModel(
            name='WorkBatchFile',
            fields=[
                ('id', sentry.db.models.fields.bounded.BoundedBigAutoField(primary_key=True, serialize=False)),
                ('ident', models.CharField(max_length=40)),
                ('name', models.TextField()),
                ('file', sentry.db.models.fields.foreignkey.FlexibleForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sentry.File')),
                ('organization', sentry.db.models.fields.foreignkey.FlexibleForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sentry.Organization')),
                ('work_batch', sentry.db.models.fields.foreignkey.FlexibleForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clims.WorkBatch')),
            ],
            options={
                'db_table': 'clims_workbatchfile',
            },
        ),
        migrations.CreateModel(
            name='WorkBatchSubscription',
            fields=[
                ('id', sentry.db.models.fields.bounded.BoundedBigAutoField(primary_key=True, serialize=False)),
                ('is_active', models.BooleanField(default=True)),
                ('reason', sentry.db.models.fields.bounded.BoundedPositiveIntegerField(default=0)),
                ('date_added', models.DateTimeField(default=django.utils.timezone.now, null=True)),
                ('user', sentry.db.models.fields.foreignkey.FlexibleForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('work_batch', sentry.db.models.fields.foreignkey.FlexibleForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subscription_set', to='clims.WorkBatch')),
            ],
            options={
                'db_table': 'clims_workbatchsubscription',
            },
        ),
        migrations.AddField(
            model_name='transition',
            name='work_batch',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='clims.WorkBatch'),
        ),
        migrations.AddField(
            model_name='substance',
            name='parents',
            field=models.ManyToManyField(related_name='children', to='clims.SubstanceVersion'),
        ),
        migrations.AddField(
            model_name='substance',
            name='project',
            field=sentry.db.models.fields.foreignkey.FlexibleForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='sentry.Project'),
        ),
        migrations.AddField(
            model_name='extensibletype',
            name='plugin',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clims.PluginRegistration'),
        ),
        migrations.AddField(
            model_name='extensiblepropertytype',
            name='extensible_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='property_types', to='clims.ExtensibleType'),
        ),
        migrations.AddField(
            model_name='extensibleproperty',
            name='extensible_property_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clims.ExtensiblePropertyType'),
        ),
        migrations.AddField(
            model_name='containerversion',
            name='properties',
            field=models.ManyToManyField(to='clims.ExtensibleProperty'),
        ),
        migrations.AddField(
            model_name='container',
            name='container_type',
            field=sentry.db.models.fields.foreignkey.FlexibleForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='containers', to='clims.ContainerType'),
        ),
        migrations.AddField(
            model_name='container',
            name='extensible_type',
            field=sentry.db.models.fields.foreignkey.FlexibleForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clims.ExtensibleType'),
        ),
        migrations.AddField(
            model_name='container',
            name='organization',
            field=sentry.db.models.fields.foreignkey.FlexibleForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sentry.Organization'),
        ),
        migrations.AddField(
            model_name='container',
            name='parent',
            field=sentry.db.models.fields.foreignkey.FlexibleForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children_set', to='clims.Container'),
        ),
        migrations.AlterUniqueTogether(
            name='workbatchsubscription',
            unique_together=set([('work_batch', 'user')]),
        ),
        migrations.AlterUniqueTogether(
            name='workbatchfile',
            unique_together=set([('work_batch', 'ident')]),
        ),
        migrations.AlterIndexTogether(
            name='workbatchfile',
            index_together=set([('work_batch', 'name')]),
        ),
        migrations.AlterUniqueTogether(
            name='substance',
            unique_together=set([('name', 'organization', 'extensible_type')]),
        ),
        migrations.AlterIndexTogether(
            name='organizationfile',
            index_together=set([('name',)]),
        ),
    ]
