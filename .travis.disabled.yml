env:
  global:
	- NODE_ENV=development
	# node's version is pinned by .nvmrc and is autodetected by `nvm install`.
	- NODE_DIR="${HOME}/.nvm/versions/node/v$(< .nvmrc)"
	- YARN_VERSION="1.3.2"
	- CLIMS_DATABASE_USER=travis

script:
  - make travis-lint-$TEST_SUITE
  - make travis-test-$TEST_SUITE
  - make travis-scan-$TEST_SUITE
  # installing dependencies for after_* steps here ensures they get cached
  # since those steps execute after travis runs `store build cache`
  - pip install codecov

after_success:
  - codecov -e TEST_SUITE

after_failure:
  - dmesg | tail -n 100

# each job in the matrix inherits `env/global` and uses everything above,
# but custom `services`, `before_install`, `install`, and `before_script` directives
# may be defined to define and setup individual job environments with more precision.
matrix:
  fast_finish: true
  include:
    - python: 2.7
      env: TEST_SUITE=postgres DB=postgres
      before_install:
        # NOTE: We require latest (19+) but `services: [docker]` gives ~18 at the moment
        - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
        - sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
        - sudo apt-get update
        - sudo apt-get -y -o Dpkg::Options::="--force-confnew" install docker-ce
        - make middleware
      install:
        - source devboot-js
        - python setup.py install_egg_info  # TODO: Required?
        - make install-clims-dev

    # TODO: Reenable acceptance tests, they are currently failing
    # - python: 2.7
    #   env: TEST_SUITE=acceptance
    #   services:
    #     - memcached
    #     - redis-server
    #     - postgresql
    #   before_install:
    #     - find "$NODE_DIR" -type d -empty -delete
    #     - nvm install
    #     - npm install -g "yarn@${YARN_VERSION}"
    #     - docker ps -a
    #   install:
    #     - yarn install --pure-lockfile
    #     - python setup.py install_egg_info
    #     - pip install -e ".[dev,tests,optional]"
    #     - ./bin/install-chromedriver
    #   before_script:
    #     - psql -c 'create database clims;' -U postgres

    - python: 2.7
      env: TEST_SUITE=js
      before_install:
        - find "$NODE_DIR" -type d -empty -delete
      install:
        - make install-yarn-pkgs

    - python: 2.7
      env: TEST_SUITE=cli
      services:
        - postgresql
        - redis-server
      install:
        - python setup.py install_egg_info
        - pip install -e .
      before_script:
        - psql -c 'create database clims;' -U postgres

    - python: 2.7
      env: TEST_SUITE=dist
      before_install:
        - source devboot-js
        - find "$NODE_DIR" -type d -empty -delete
      install:
        - make install-yarn-pkgs
